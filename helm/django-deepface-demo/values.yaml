# Default values for django-deepface-demo
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: django-deepface-demo
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: django-deepface-demo.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: django-deepface-demo-tls
  #    hosts:
  #      - django-deepface-demo.local

resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  # requests:
  #   cpu: 250m
  #   memory: 256Mi

livenessProbe:
  httpGet:
    path: /demo/
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /demo/
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumes: []
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

# Django configuration
django:
  debug: false
  secretKey: ""  # Will be generated if empty
  allowedHosts: "*"
  
  # Database configuration
  database:
    external: false  # Set to true to use external database
    host: ""
    port: 5432
    name: deepface
    user: postgres
    password: ""
    
  # Media files storage
  media:
    storageClass: ""
    size: 10Gi

# PostgreSQL dependency configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres"
    database: "deepface"
  primary:
    persistence:
      enabled: true
      size: 8Gi
    initdb:
      scripts:
        init-pgvector.sql: |
          CREATE EXTENSION IF NOT EXISTS vector;

# Environment variables
env:
  - name: DJANGO_SETTINGS_MODULE
    value: "django_deepface_demo.settings"
  - name: DEBUG
    value: "False"

# Additional environment variables from secrets/configmaps
envFrom: []